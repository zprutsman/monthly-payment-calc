{"version":3,"sources":["components/widget.js","components/extraCosts.js","components/Chart.js","components/downpayment.js","components/listingprice.js","components/LoanTerm.js","banner.jpg","App.js","reportWebVitals.js","index.js"],"names":["InterestRate","props","title","placeholder","type","value","min","max","step","setValue","updatePrice","e","target","className","style","textAlign","paddingLeft","paddingTop","color","fontWeight","fontSize","backgroundColor","paddingBottom","paddingRight","width","marginTop","marginBottom","onChange","ExtraCosts","height","prefix","Chart","paymentPrincipal","monthlyPayment","insurance","propertyTaxMonthly","interest","borderBottom","maxWidth","margin","top","position","left","right","toFixed","replace","DownPayment","price","downPayment","updateDownPayment","downPaymentConverted","ListingPrice","setTaxValue","estPropertyTax","LoanTerm","padding","toNum","n","parseFloat","App","useState","setDownPayment","interestRate","setInterestRate","setPrice","propertyTax","setPropertyTax","setInsurance","loanTerm","setLoanTerm","r","principal","numerator","denominator","loanPayment","background","display","gridTemplateColumns","alignItems","Number","isNaN","b","balance","interestPaid","amortization","justifyContent","gap","lineHeight","alignSelf","justifySelf","src","banner","class","textTransform","letterSpacing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63d806e4.chunk.js","sourcesContent":["const InterestRate = (props) => {\r\n  const { title, placeholder, type, value, min, max, step, setValue } = props;\r\n  const updatePrice = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"widgetContainer\">\r\n      <p\r\n        style={{\r\n          textAlign: \"left\",\r\n          paddingLeft: 20,\r\n          paddingTop: 7,\r\n          color: \"#414042\",\r\n          fontWeight: \"600\",\r\n          fontSize: 15,\r\n        }}\r\n      >\r\n        {title}\r\n      </p>\r\n      <div>\r\n        <span\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            paddingTop: 2,\r\n            paddingBottom: 3,\r\n            paddingRight: 4,\r\n            color: \"#5E6367\",\r\n            paddingLeft: 4,\r\n            fontWeight: \"500\",\r\n          }}\r\n        >\r\n          %\r\n        </span>\r\n        <input\r\n          style={{\r\n            width: \"80%\",\r\n            color: \"#002a4e\",\r\n            marginTop: 5,\r\n            marginBottom: 5,\r\n            fontWeight: \"600\",\r\n          }}\r\n          placeholder={placeholder}\r\n          className=\"input-long\"\r\n          type={type}\r\n          value={value}\r\n          onChange={updatePrice}\r\n          min={min}\r\n          max={max}\r\n        />\r\n      </div>\r\n      <input\r\n        style={{ width: \"80%\", marginTop: 5 }}\r\n        className=\"slider\"\r\n        type=\"range\"\r\n        value={value === \"\" ? min : value}\r\n        onChange={updatePrice}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        // min={inputPrice - 50000}\r\n        // max={inputPrice + 50000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterestRate;\r\n","const ExtraCosts = (props) => {\r\n  const updateExtraCosts = (e) => {\r\n    let value = e.target.value;\r\n    props.setValue(value);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        height: 30,\r\n        textAlign: \"right\",\r\n        paddingTop: 3,\r\n      }}\r\n    >\r\n      <div className=\"extraCostContainer\">\r\n        <p\r\n          style={{\r\n            fontSize: 14,\r\n            paddingRight: 5,\r\n            fontWeight: \"600\",\r\n            color: \"#414042\",\r\n          }}\r\n        >\r\n          {props.title}\r\n        </p>\r\n        <div>\r\n          <span\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              paddingTop: 2,\r\n              paddingBottom: 3,\r\n              paddingRight: 4,\r\n              color: \"#5E6367\",\r\n              paddingLeft: 4,\r\n              fontWeight: 500,\r\n            }}\r\n          >\r\n            {props.prefix}\r\n          </span>\r\n          <input\r\n            style={{ width: \"80%\", color: \"#002a4e\", fontWeight: \"600\" }}\r\n            placeholder={props.placeholder}\r\n            type=\"number\"\r\n            value={props.value}\r\n            onChange={updateExtraCosts}\r\n            min={0}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExtraCosts;\r\n","import { getByLabelText } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Chart = (props) => {\r\n  const {\r\n    paymentPrincipal,\r\n    monthlyPayment,\r\n    insurance,\r\n    propertyTaxMonthly,\r\n    interest,\r\n  } = props;\r\n  return (\r\n    <div\r\n      style={{\r\n        borderBottom: \"2px solid #5E6367\",\r\n        maxWidth: 960,\r\n        margin: \"0 0 0 20px\",\r\n        paddingBottom: 20,\r\n        paddingTop: 20,\r\n      }}\r\n    >\r\n      <div\r\n        className=\"interest transition-all mb-2 duration-300 ease-linear p-2 relative\"\r\n        style={\r\n          (paymentPrincipal / monthlyPayment) * 100 > 9\r\n            ? {\r\n                width: (paymentPrincipal / monthlyPayment) * 100 + \"%\",\r\n                height: 25,\r\n                backgroundColor: \"#009cde\",\r\n              }\r\n            : {\r\n                width: (paymentPrincipal / monthlyPayment) * 100 + \"%\",\r\n                height: 25,\r\n                backgroundColor: \"#009cde\",\r\n              }\r\n        }\r\n      >\r\n        <p\r\n          className=\"transition-all duration-300 ease-linear\"\r\n          style={\r\n            (paymentPrincipal / monthlyPayment) * 100 > 9\r\n              ? {\r\n                  fontSize: \"14px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                  top: 3,\r\n                  position: \"absolute\",\r\n                  left: 10,\r\n                }\r\n              : {\r\n                  fontSize: \"14px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                  top: -18,\r\n                  position: \"absolute\",\r\n                  left: 10,\r\n                }\r\n          }\r\n        >\r\n          Principle\r\n        </p>\r\n        <p\r\n          className=\"principalLabel\"\r\n          style={{\r\n            top: 2,\r\n            right: -50,\r\n            position: \"absolute\",\r\n            fontSize: \"15px\",\r\n            color: \"white\",\r\n            fontWeight: \"500\",\r\n          }}\r\n        >\r\n          ${paymentPrincipal.toFixed(0).replace(/\\d(?=(\\d{3})+$)/g, \"$&,\")}\r\n        </p>\r\n      </div>\r\n      <div\r\n        className=\"interest transition-all mb-2 duration-500 ease-linear p-2 relative\"\r\n        style={\r\n          (interest / monthlyPayment) * 100 > 9\r\n            ? {\r\n                width: (interest / monthlyPayment) * 100 + \"%\",\r\n                height: 25,\r\n                backgroundColor: \"#929236\",\r\n              }\r\n            : {\r\n                width: (interest / monthlyPayment) * 100 + \"%\",\r\n                height: 25,\r\n                backgroundColor: \"#929236\",\r\n                marginTop: 20,\r\n              }\r\n        }\r\n      >\r\n        <p\r\n          className=\"transition-all duration-300 ease-linear\"\r\n          style={\r\n            (interest / monthlyPayment) * 100 > 9\r\n              ? {\r\n                  fontSize: \"14px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                  top: 3,\r\n                  position: \"absolute\",\r\n                  left: 10,\r\n                }\r\n              : {\r\n                  fontSize: \"14px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                  top: -18,\r\n                  position: \"absolute\",\r\n                  left: 10,\r\n                }\r\n          }\r\n        >\r\n          Interest\r\n        </p>\r\n        <p\r\n          style={{\r\n            top: 2,\r\n            right: -50,\r\n            position: \"absolute\",\r\n            fontSize: \"15px\",\r\n            color: \"white\",\r\n            fontWeight: \"500\",\r\n          }}\r\n        >\r\n          ${interest.toFixed(0).replace(/\\d(?=(\\d{3})+$)/g, \"$&,\")}\r\n        </p>\r\n      </div>\r\n      {insurance == 0 ? null : (\r\n        <div\r\n          className=\"insurance mb-2 p-2 relative transition-all duration-500 ease-linear\"\r\n          style={\r\n            (insurance / monthlyPayment) * 100 > 9\r\n              ? {\r\n                  width: (insurance / monthlyPayment) * 100 + \"%\",\r\n                  height: 25,\r\n                  backgroundColor: \"#E65526\",\r\n                }\r\n              : {\r\n                  width: (insurance / monthlyPayment) * 100 + \"%\",\r\n                  height: 25,\r\n                  backgroundColor: \"#E65526\",\r\n                  marginTop: 20,\r\n                }\r\n          }\r\n        >\r\n          <p\r\n            className=\"transition-all duration-300 ease-linear\"\r\n            style={\r\n              (insurance / monthlyPayment) * 100 > 9\r\n                ? {\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    fontWeight: \"500\",\r\n                    top: 3,\r\n                    position: \"absolute\",\r\n                    left: 10,\r\n                  }\r\n                : {\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    fontWeight: \"500\",\r\n                    top: -18,\r\n                    position: \"absolute\",\r\n                    left: 10,\r\n                  }\r\n            }\r\n          >\r\n            Insurance\r\n          </p>\r\n          <p\r\n            style={{\r\n              top: 2,\r\n              right: -50,\r\n              position: \"absolute\",\r\n              fontSize: \"15px\",\r\n              color: \"white\",\r\n              fontWeight: \"500\",\r\n            }}\r\n          >\r\n            ${insurance.replace(/\\d(?=(\\d{3})+$)/g, \"$&,\")}\r\n          </p>\r\n        </div>\r\n      )}\r\n      {propertyTaxMonthly === 0 ? null : (\r\n        <div\r\n          className=\"tax transition-all duration-500 ease-linear p-2 relative\"\r\n          style={\r\n            (propertyTaxMonthly / monthlyPayment) * 100 > 9\r\n              ? {\r\n                  width: (propertyTaxMonthly / monthlyPayment) * 100 + \"%\",\r\n                  height: 25,\r\n                  backgroundColor: \"#5AC0B1\",\r\n                }\r\n              : {\r\n                  width: (propertyTaxMonthly / monthlyPayment) * 100 + \"%\",\r\n                  height: 25,\r\n                  backgroundColor: \"#5AC0B1\",\r\n                  marginTop: 20,\r\n                }\r\n          }\r\n        >\r\n          <p\r\n            className=\"transition-all duration-300 ease-linear\"\r\n            style={\r\n              (propertyTaxMonthly / monthlyPayment) * 100 > 9\r\n                ? {\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    fontWeight: \"500\",\r\n                    top: 3,\r\n                    position: \"absolute\",\r\n                    left: 10,\r\n                  }\r\n                : {\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    fontWeight: \"500\",\r\n                    top: -18,\r\n                    position: \"absolute\",\r\n                    left: 10,\r\n                  }\r\n            }\r\n          >\r\n            Taxes\r\n          </p>\r\n          <p\r\n            style={{\r\n              top: 2,\r\n              right: -50,\r\n              position: \"absolute\",\r\n              fontSize: \"15px\",\r\n              color: \"white\",\r\n              fontWeight: \"500\",\r\n            }}\r\n          >\r\n            ${propertyTaxMonthly.toFixed(0).replace(/\\d(?=(\\d{3})+$)/g, \"$&,\")}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","const DownPayment = (props) => {\r\n  const {\r\n    title,\r\n    placeholder,\r\n    type,\r\n    value,\r\n    min,\r\n    max,\r\n    price,\r\n    step,\r\n    downPayment,\r\n    setValue,\r\n  } = props;\r\n  const updateDownPayment = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const downPaymentConverted = (downPayment / 100) * price;\r\n\r\n  return (\r\n    <div className=\"widgetContainer\">\r\n      <p\r\n        style={{\r\n          textAlign: \"left\",\r\n          paddingLeft: 20,\r\n          paddingTop: 7,\r\n          color: \"#414042\",\r\n          fontWeight: \"600\",\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        {title}\r\n      </p>\r\n      <div>\r\n        <span\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            paddingTop: 2,\r\n            paddingBottom: 3,\r\n            paddingRight: 4,\r\n            color: \"#5E6367\",\r\n            paddingLeft: 4,\r\n            fontWeight: \"500\",\r\n          }}\r\n        >\r\n          %\r\n        </span>\r\n        <input\r\n          style={{\r\n            width: \"40%\",\r\n            color: \"#002a4e\",\r\n            marginTop: 5,\r\n            marginBottom: 5,\r\n            fontWeight: \"600\",\r\n          }}\r\n          placeholder={placeholder}\r\n          type={type}\r\n          value={value}\r\n          onChange={updateDownPayment}\r\n          min={min}\r\n          max={max}\r\n        />\r\n        <span\r\n          style={{\r\n            color: \"#414042\",\r\n            fontWeight: \"600\",\r\n            fontSize: 14,\r\n            paddingLeft: 10,\r\n          }}\r\n        >\r\n          (${downPaymentConverted.toFixed(0).replace(/\\d(?=(\\d{3})+$)/g, \"$&,\")}\r\n          )\r\n        </span>\r\n      </div>\r\n      <input\r\n        style={{ width: \"80%\", marginTop: 5 }}\r\n        type=\"range\"\r\n        value={value === \"\" ? min : value}\r\n        onChange={updateDownPayment}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownPayment;\r\n","const ListingPrice = (props) => {\r\n  const {\r\n    title,\r\n    placeholder,\r\n    type,\r\n    value,\r\n    min,\r\n    max,\r\n    step,\r\n    setValue,\r\n    setTaxValue,\r\n  } = props;\r\n  const updatePrice = (e) => {\r\n    const estPropertyTax = e.target.value * 0.011;\r\n    setValue(e.target.value);\r\n    setTaxValue(estPropertyTax.toFixed(0));\r\n  };\r\n  return (\r\n    <div className=\"widgetContainer\">\r\n      <p\r\n        style={{\r\n          textAlign: \"left\",\r\n          paddingLeft: 20,\r\n          paddingTop: 7,\r\n          color: \"#414042\",\r\n          fontWeight: \"600\",\r\n          fontSize: 15,\r\n        }}\r\n      >\r\n        {title}\r\n      </p>\r\n      <div>\r\n        <span\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            paddingTop: 2,\r\n            paddingBottom: 3,\r\n            paddingRight: 4,\r\n            color: \"#5E6367\",\r\n            paddingLeft: 4,\r\n          }}\r\n        >\r\n          $\r\n        </span>\r\n        <input\r\n          style={{\r\n            width: \"80%\",\r\n            color: \"#002a4e\",\r\n            marginTop: 5,\r\n            marginBottom: 5,\r\n            fontWeight: \"500\",\r\n          }}\r\n          placeholder={placeholder}\r\n          type={type}\r\n          value={value}\r\n          onChange={updatePrice}\r\n          min={min}\r\n          max={max}\r\n        />\r\n      </div>\r\n      <input\r\n        style={{ width: \"80%\", marginTop: 5 }}\r\n        type=\"range\"\r\n        value={value === \"\" ? min : value}\r\n        onChange={updatePrice}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListingPrice;\r\n","const LoanTerm = (props) => {\r\n  const updateLoanTerm = (e) => {\r\n    let value = e.target.value;\r\n    props.setValue(value);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        height: 30,\r\n        textAlign: \"right\",\r\n        paddingTop: 3,\r\n      }}\r\n    >\r\n      <div className=\"extraCostContainer\">\r\n        <p\r\n          style={{\r\n            fontSize: 14,\r\n            paddingRight: 5,\r\n            fontWeight: \"600\",\r\n            color: \"#414042\",\r\n          }}\r\n        >\r\n          {props.title}\r\n        </p>\r\n        <div>\r\n          <select\r\n            style={{\r\n              width: \"95%\",\r\n              color: \"#002a4e\",\r\n              fontWeight: \"600\",\r\n              padding: \"0 5px\",\r\n            }}\r\n            onChange={updateLoanTerm}\r\n          >\r\n            <option\r\n              style={{\r\n                color: \"#002a4e\",\r\n                fontWeight: \"600\",\r\n                fontSize: \"14px\",\r\n              }}\r\n              value=\"30\"\r\n            >\r\n              30 Years\r\n            </option>\r\n            <option\r\n              style={{\r\n                color: \"#002a4e\",\r\n                fontWeight: \"600\",\r\n                fontSize: \"14px\",\r\n              }}\r\n              value=\"15\"\r\n            >\r\n              15 Years\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LoanTerm;\r\n","export default __webpack_public_path__ + \"static/media/banner.85f73ecf.jpg\";","import { useEffect, useRef, useState } from \"react\";\nimport InterestRate from \"./components/widget\";\nimport \"./index.css\";\nimport ExtraCosts from \"./components/extraCosts\";\nimport Chart from \"./components/Chart\";\nimport DownPayment from \"./components/downpayment\";\nimport ListingPrice from \"./components/listingprice\";\nimport LoanTerm from \"./components/LoanTerm\";\nimport banner from \"./banner.jpg\";\n\nconst toNum = (n) => {\n  if (n === \"\") {\n    return 0;\n  }\n  return parseFloat(n);\n};\nfunction App() {\n  const [downPayment, setDownPayment] = useState(\"10\");\n  const [interestRate, setInterestRate] = useState(\"5\");\n  const [price, setPrice] = useState(\"300000\");\n  const [propertyTax, setPropertyTax] = useState(\"15000\");\n  const [insurance, setInsurance] = useState(\"1000\");\n  const [loanTerm, setLoanTerm] = useState(\"30\");\n  const propertyTaxMonthly = toNum(propertyTax) / 12;\n  const r = toNum(interestRate) / 100 / 12;\n  const n = 12 * toNum(loanTerm);\n  const principal = toNum(price) * (1 - toNum(downPayment) / 100);\n  const interest = principal * r;\n  const numerator = (1 + r) ** n;\n  const denominator = (1 + r) ** n - 1;\n  const loanPayment = principal * r * (numerator / denominator);\n  const paymentPrincipal = loanPayment - interest;\n  const monthlyPayment = loanPayment + propertyTaxMonthly + toNum(insurance);\n  const amortization = (b) => {\n    let balance = b;\n    let interestPaid = 0;\n    while (balance > 0) {\n      interestPaid += balance * r;\n      balance -= loanPayment - balance * r;\n    }\n    return interestPaid.toFixed(0);\n  };\n  return (\n    <div className=\"container\">\n      <div\n        style={{\n          background: \"#F1F1F2\",\n          padding: \"10px 20px 10px 40px\",\n          display: \"grid\",\n          gridTemplateColumns: \"65% 35%\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <p\n            style={{\n              fontSize: 18,\n              fontWeight: \"500\",\n              color: \"#5E6367\",\n              borderBottom: \"1px solid #bbbcbc\",\n              maxWidth: 400,\n              marginBottom: 7,\n              paddingBottom: 10,\n              paddingTop: 10,\n            }}\n          >\n            Monthly payment:\n            <span\n              style={{\n                fontSize: 22,\n                color: \"#002a4e\",\n                fontWeight: \"600\",\n                paddingLeft: 10,\n              }}\n            >\n              {Number.isNaN(monthlyPayment)\n                ? \"Please enter values\"\n                : `$${monthlyPayment\n                    .toFixed(0)\n                    .replace(/\\d(?=(\\d{3})+$)/g, \"$&,\")}`}\n            </span>\n          </p>\n          <p\n            style={{\n              fontSize: 18,\n              fontWeight: \"500\",\n              color: \"#5E6367\",\n              maxWidth: 400,\n              paddingBottom: 10,\n            }}\n          >\n            Total interest paid:\n            <span\n              style={{\n                fontSize: 22,\n                color: \"#002a4e\",\n                fontWeight: \"600\",\n                paddingLeft: 10,\n              }}\n            >\n              ${amortization(principal).replace(/\\d(?=(\\d{3})+$)/g, \"$&,\")}\n            </span>\n          </p>\n        </div>\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"50% 50%\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            gap: 20,\n          }}\n        >\n          <p\n            style={{\n              fontSize: 30,\n              maxWidth: 200,\n              lineHeight: \"1.2\",\n              textAlign: \"right\",\n              color: \"#5E6367\",\n              fontWeight: \"500\",\n            }}\n          >\n            Mortgage Calculator\n          </p>\n          <img\n            style={{\n              maxWidth: 65,\n              alignSelf: \"top\",\n              justifySelf: \"start\",\n              marginTop: -25,\n            }}\n            src={banner}\n          />\n        </div>\n      </div>\n      <div></div>\n      <div\n        style={{\n          backgroundColor: \"#002a4e\",\n          padding: \"5px 25px 20px 20px\",\n        }}\n      >\n        {Number.isNaN(monthlyPayment) ? null : (\n          <Chart\n            monthlyPayment={monthlyPayment}\n            propertyTaxMonthly={propertyTaxMonthly}\n            loanPayment={loanPayment}\n            insurance={insurance}\n            interest={interest}\n            paymentPrincipal={paymentPrincipal}\n          />\n        )}\n\n        <div class=\"inputContainer\">\n          <ListingPrice\n            title=\"Listing Price $\"\n            type=\"number\"\n            placeholder=\"Enter Listing Price\"\n            min={50000}\n            max={5000000}\n            setValue={setPrice}\n            value={price}\n            step={1}\n            setTaxValue={setPropertyTax}\n          />\n          <DownPayment\n            title=\"Down Payment %\"\n            type=\"number\"\n            placeholder=\"Down Payment Percent\"\n            min={0}\n            max={40}\n            value={downPayment}\n            setValue={setDownPayment}\n            step={1}\n            downPayment={downPayment}\n            price={price}\n          />\n          <InterestRate\n            title=\"Interest Rate %\"\n            type=\"number\"\n            placeholder=\"Enter Interest Rate\"\n            min={1}\n            max={10}\n            value={interestRate}\n            setValue={setInterestRate}\n            step={0.25}\n          />\n          <div\n            style={{\n              backgroundColor: \"#efefef\",\n              paddingRight: 15,\n              paddingTop: 5,\n              paddingBottom: 5,\n            }}\n          >\n            <ExtraCosts\n              title=\"Insurance\"\n              value={insurance}\n              setValue={setInsurance}\n              prefix={\"$\"}\n            />\n            <ExtraCosts\n              title=\"Property Taxes\"\n              value={propertyTax}\n              setValue={setPropertyTax}\n              prefix={\"$\"}\n            />\n            <LoanTerm\n              value={loanTerm}\n              setValue={setLoanTerm}\n              title=\"Loan Term\"\n            />\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"55% 45%\",\n            padding: \"0 20px\",\n          }}\n        >\n          <p\n            style={{\n              fontSize: 12,\n              color: \"#bbbcbc\",\n              fontWeight: \"500\",\n              maxWidth: 500,\n            }}\n          >\n            For general informational purposes only. Actual rates available to\n            you will depend on many factors including lender, income, credit,\n            location, and property value. Contact a mortgage broker to find out\n            what programs are available to you.\n          </p>\n          <p\n            style={{\n              justifySelf: \"center\",\n              alignSelf: \"center\",\n              fontSize: 14,\n              color: \"white\",\n              textTransform: \"uppercase\",\n              letterSpacing: 2,\n              fontWeight: \"500\",\n            }}\n          >\n            Windermere Real Estate\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}