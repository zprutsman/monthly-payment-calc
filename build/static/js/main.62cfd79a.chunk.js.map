{"version":3,"sources":["widget.js","extraCosts.js","Chart.js","downpayment.js","App.js","reportWebVitals.js","index.js"],"names":["Widget","props","title","placeholder","type","value","min","max","step","setValue","updatePrice","e","target","className","onChange","ExtraCosts","Chart","loanPayment","monthlyPayment","insurance","propertyTax","style","width","height","toFixed","DownPayment","price","downPayment","updateDownPayment","downPaymentConverted","toNum","n","parseFloat","App","useState","setDownPayment","interestRate","setInterestRate","setPrice","setPropertyTax","setInsurance","r","Number","isNaN","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62cfd79a.chunk.js","sourcesContent":["const Widget = (props) => {\r\n  const { title, placeholder, type, value, min, max, step, setValue } = props;\r\n  const updatePrice = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"flex-auto p-6 border-2 border-gray-500 m-2\">\r\n      <p>{title}</p>\r\n      <input\r\n        placeholder={placeholder}\r\n        className=\"rounded border-2 border-gray-400 text-base text-green-500\"\r\n        type={type}\r\n        value={value}\r\n        onChange={updatePrice}\r\n        min={min}\r\n        max={max}\r\n      />\r\n      <input\r\n        className=\"block mt-4 mb-0\"\r\n        type=\"range\"\r\n        value={value === \"\" ? min : value}\r\n        onChange={updatePrice}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        // min={inputPrice - 50000}\r\n        // max={inputPrice + 50000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","const ExtraCosts = (props) => {\r\n  const updateExtraCosts = (e) => {\r\n    props.setValue(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"flex-auto p-6 border-2 border-gray-500 m-2\">\r\n      <p>{props.title}</p>\r\n      <input\r\n        placeholder={props.placeholder}\r\n        className=\"rounded border-2 border-gray-400 text-base text-green-500\"\r\n        type=\"number\"\r\n        value={props.value}\r\n        onChange={updateExtraCosts}\r\n        min={0}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default ExtraCosts;\r\n","import React from \"react\";\r\n\r\nconst Chart = (props) => {\r\n  const { loanPayment, monthlyPayment, insurance, propertyTax } = props;\r\n\r\n  return (\r\n    <div className=\"pl-10 pt-6\">\r\n      <div\r\n        className=\"principal bg-blue-400 mb-2 transition-all duration-500 ease-linear p-2 relative\"\r\n        style={{\r\n          width: (loanPayment / monthlyPayment) * 100 + \"%\",\r\n          height: 25,\r\n        }}\r\n      >\r\n        <p className=\"text-xs text-white pb-1\">Principal & Interest</p>\r\n        <p className=\"absolute right-0.5 bottom-0.5 text-xs text-white\">\r\n          ${loanPayment.toFixed(0)}\r\n        </p>\r\n      </div>\r\n      <div\r\n        className=\"insurance bg-yellow-400 mb-2 p-2 relative transition-all duration-500 ease-linear\"\r\n        style={{ width: (insurance / monthlyPayment) * 100 + \"%\", height: 25 }}\r\n      >\r\n        <p className=\"text-xs text-white pb-1\">Homeowner's Insurance</p>\r\n        <p className=\"absolute right-0.5 bottom-0.5 text-xs text-white\">\r\n          ${insurance}\r\n        </p>\r\n      </div>\r\n      <div\r\n        className=\"tax bg-purple-700 transition-all duration-500 ease-linear p-2 relative\"\r\n        style={{\r\n          width: (propertyTax / monthlyPayment) * 100 + \"%\",\r\n          height: 25,\r\n        }}\r\n      >\r\n        <p className=\"text-xs text-white pb-1\">Property Tax</p>\r\n        <p className=\"absolute right-0.5 bottom-0.5 text-xs text-white\">\r\n          ${propertyTax}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","const DownPayment = (props) => {\r\n  const {\r\n    title,\r\n    placeholder,\r\n    type,\r\n    value,\r\n    min,\r\n    max,\r\n    price,\r\n    step,\r\n    downPayment,\r\n    setValue,\r\n  } = props;\r\n  const updateDownPayment = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const downPaymentConverted = (downPayment / 100) * price;\r\n\r\n  return (\r\n    <div className=\"flex-auto p-6 border-2 border-gray-500 m-2\">\r\n      <p>{title}</p>\r\n      <input\r\n        placeholder={placeholder}\r\n        className=\"rounded border-2 border-gray-400 text-base text-green-500\"\r\n        type={type}\r\n        value={value}\r\n        onChange={updateDownPayment}\r\n        min={min}\r\n        max={max}\r\n      />\r\n      <span className=\"pl-2 text-green-500\">\r\n        (${downPaymentConverted.toFixed(0)})\r\n      </span>\r\n      <input\r\n        className=\"block mt-4 mb-0\"\r\n        type=\"range\"\r\n        value={value === \"\" ? min : value}\r\n        onChange={updateDownPayment}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownPayment;\r\n","import { useEffect, useRef, useState } from \"react\";\nimport Widget from \"./widget\";\nimport \"./index.css\";\nimport ExtraCosts from \"./extraCosts\";\nimport Chart from \"./Chart\";\nimport DownPayment from \"./downpayment\";\n\nconst toNum = (n) => {\n  if (n === \"\") {\n    return 0;\n  }\n  return parseFloat(n);\n};\nfunction App() {\n  const [downPayment, setDownPayment] = useState(\"10\");\n  const [interestRate, setInterestRate] = useState(\"5\");\n  const [price, setPrice] = useState(\"100000\");\n  const [propertyTax, setPropertyTax] = useState(\"1000\");\n  const [insurance, setInsurance] = useState(\"1500\");\n  const r = toNum(interestRate) / 100 / 12;\n  const n = 12 * 30;\n  const principal = toNum(price) * (1 - toNum(downPayment) / 100);\n  const numerator = (1 + r) ** n;\n  const denominator = (1 + r) ** n - 1;\n  const loanPayment = principal * r * (numerator / denominator);\n  const monthlyPayment = loanPayment + toNum(propertyTax) + toNum(insurance);\n  return (\n    <div>\n      <div>\n        <p className=\"pt-2 px-10\">\n          {\" \"}\n          Your monthly payment is:&ensp;\n          {Number.isNaN(monthlyPayment)\n            ? \"Please enter values\"\n            : `$${monthlyPayment.toFixed(0)}`}\n        </p>\n        {Number.isNaN(monthlyPayment) ? null : (\n          <Chart\n            monthlyPayment={monthlyPayment}\n            propertyTax={propertyTax}\n            loanPayment={loanPayment}\n            insurance={insurance}\n          />\n        )}\n      </div>\n      <div className=\"flex p-6\">\n        <Widget\n          title=\"Listing Price\"\n          placeholder=\"Enter Listing Price\"\n          min={50000}\n          max={2000000}\n          setValue={setPrice}\n          value={price}\n          step={1}\n        />\n        <DownPayment\n          title=\"Down Payment\"\n          type=\"number\"\n          placeholder=\"Down Payment Percent\"\n          min={0}\n          max={40}\n          value={downPayment}\n          setValue={setDownPayment}\n          step={1}\n          downPayment={downPayment}\n          price={price}\n        />\n        <Widget\n          title=\"Interest Rate\"\n          type=\"number\"\n          placeholder=\"Enter Interest Rate\"\n          min={1}\n          max={10}\n          value={interestRate}\n          setValue={setInterestRate}\n          step={0.25}\n        />\n        <ExtraCosts\n          title=\"Homeowner's Insurance\"\n          value={insurance}\n          setValue={setInsurance}\n        />\n        <ExtraCosts\n          title=\"Property Tax\"\n          value={propertyTax}\n          setValue={setPropertyTax}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}